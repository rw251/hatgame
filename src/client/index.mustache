<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>{{ title }}</title>

  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="theme-color" content="#ffffff">

  <meta name="mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-capable" content="yes">

  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="Description" content="Play the hat game.">
  
  <style>
    * {
      box-sizing: border-box;
    }

    html {
      
    }

    body {
      text-align: center;
      font-family: 'HelveticaNeue-Light','Helvetica Neue Light','Helvetica Neue',Helvetica,Arial,'Lucida Grande',sans-serif;
      font-size: 1.2rem;
      margin: 0;
    }    
    .page { 
      display: none;
      margin: 0 auto;
      width: 100%;
      justify-content: center;
    }
    .page-narrow {
      max-width: 600px;
    }
    .landing-page-button {
      font-size: 1.8rem;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      user-select: none;
      color: #fff;
      background: #448AFF;
      border: 0;
      box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.3);
      cursor: pointer;
      margin: 0.5rem 0.2rem;
      max-width: 500px;
      min-height: 50px;
      border-radius: 0.5rem;
      padding: 1em;
      position: relative;
      outline: none;
    }
    .full-width-button {
      width: 98vw;
    }

    /* Pre-render the bigger shadow, but hide it */
    .landing-page-button::after {
      content: '';
      position: absolute;
      top:0;
      left:0;
      right:0;
      bottom:0;
      box-shadow: 0 5px 15px rgba(0,0,0,0.8);
      border-radius: 0.5rem;
      opacity: 0;
      transition: opacity 0.3s;
    }

    /* Transition to showing the bigger shadow on hover */
    .landing-page-button:hover:after {
      opacity: 1;
    }
    .landing-page-button:disabled {
      background: #b3bccc;
      box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.1);
    }
    .landing-page-button:disabled:hover:after {
      opacity: 0;
    }

    #game-bar {
      grid-template-columns: 1fr 1fr;
      background: #f0d954;
      flex-wrap: wrap;
    }
    #game-bar span {
      font-size: 1.5rem;
      line-height: 2.5rem;
      padding: 0 5px;
      flex-grow: 1;
    }
    #people-counter {
      background: purple;
      color: white;
    }
    #game-bar span:nth-child(1) {
      flex-grow:100;
    }
    .hide {
      display: none;
    }
    form.input-with-button {
      max-width: 500px;
      margin: 10px auto;
    }
    form.input-with-button input[type=text] {
      padding: 10px;
      font-size: 2rem;
      line-height: 4rem;
      border: 1px solid grey;
      float: left;
      width: calc(80% - 2px);
      margin-left: 2px;
      border-radius: 10px 0 0 10px;
      outline: none;
    }
    form.input-with-button input[type=text]::placeholder {
      transition: opacity 0.5s; 
    }
    form.input-with-button input[type=text]:focus::placeholder {
      opacity: 0;
    }
    form.input-with-button input[type=text]:focus {
      border-color: blue;
    }
    form.input-with-button button {
      float: left;
      width: calc(20% - 2px);
      padding: 10px;
      background: #2196F3;
      color: white;
      font-size: 2rem;
      line-height: 4rem;
      border: 1px solid grey;
      border-left: none;
      cursor: pointer;
      border-radius: 0 10px 10px 0;
      outline: none;
      margin-right: 2px;
    }

    form.input-with-button button:hover {
      background: #0b7dda;
    }

    form.input-with-button::after {
      content: "";
      clear: both;
      display: table;
    }

    ul {
      list-style-type: none;
      padding: 0;
      margin: 15px;
    }

    ul li {
      line-height: 30px;
    }

    li.got {
      color: darkgreen;
      max-width: 400px;
      margin: 0 auto; 
      font-weight: bold;
      text-align: left;
    }

    li.got:before {
      content: '✓ ';
    }

    li.skipped {
      color: #555;
      max-width: 400px;
      margin: 0 auto;
      text-align: left;
    }
    li.skipped:before {
      content: '✗ '
    }

    .host-only {
      display: none;
    }
    .guest-only {
      display: none;
    }
    #round-countdown {
      position: absolute;
      top: 40vh;
      text-align: center;
      width: 100%;
      font-size: 150px;
    }    
    @keyframes pulse {
      0% {
        /* opacity: 0; */
        transform: scale(0.05);
      }
      20% {
        opacity: 1;
        transform: scale(1.2);
      }
      100% {
        opacity: 0;
        transform: scale(0.75);
      }
    }
    #round-countdown div{
      position: absolute;
      top:0;
      width: 100%;
      opacity: 0;
      /* animation-duration: 1s; */
      /* transform: ;
      transition: transform 0.95s cubic-bezier(0.29, -0.4, 0.6, 1.28), opacity 0.5s cubic-bezier(0.29, -0.4, 0.6, 1.28); */
    }    
    #round-countdown div.counting {
      animation: pulse 1s forwards;
    }
    @media (max-width: 578px) {
      #game-bar span {
        font-size: 1.2rem;
        line-height: 1.5rem;
      }
      form.input-with-button input[type=text] {
        line-height: 2.5rem;
      }
      form.input-with-button button {
        line-height: 2.5rem;
      }
      h1 {
        font-size: 1.5em;
        margin: 2px 0;
      }
      p {        
        margin: 2px 0;
        font-size: 1rem;
      }
      .landing-page-button {        
        padding: 0.3em;
      }
    }
  </style>
    {{#isProduction}}
  <script>
    var _rollbarConfig = {
      accessToken: "{{ rollbarClientToken }}",
      captureUncaught: true,
      captureUnhandledRejections: true,
      payload: {
        environment: "production",
        client: {
          javascript: {
            source_map_enabled: true,
            code_version: "{{ version }}",
            guess_uncaught_frames: true,
          }
        }
      }
    };
    // Rollbar Snippet
    !function(r){function e(n){if(o[n])return o[n].exports;var t=o[n]={exports:{},id:n,loaded:!1};return r[n].call(t.exports,t,t.exports,e),t.loaded=!0,t.exports}var o={};return e.m=r,e.c=o,e.p="",e(0)}([function(r,e,o){"use strict";var n=o(1),t=o(4);_rollbarConfig=_rollbarConfig||{},_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.4.6/rollbar.min.js",_rollbarConfig.async=void 0===_rollbarConfig.async||_rollbarConfig.async;var a=n.setupShim(window,_rollbarConfig),l=t(_rollbarConfig);window.rollbar=n.Rollbar,a.loadFull(window,document,!_rollbarConfig.async,_rollbarConfig,l)},function(r,e,o){"use strict";function n(r){return function(){try{return r.apply(this,arguments)}catch(r){try{console.error("[Rollbar]: Internal error",r)}catch(r){}}}}function t(r,e){this.options=r,this._rollbarOldOnError=null;var o=s++;this.shimId=function(){return o},"undefined"!=typeof window&&window._rollbarShims&&(window._rollbarShims[o]={handler:e,messages:[]})}function a(r,e){if(r){var o=e.globalAlias||"Rollbar";if("object"==typeof r[o])return r[o];r._rollbarShims={},r._rollbarWrappedError=null;var t=new p(e);return n(function(){e.captureUncaught&&(t._rollbarOldOnError=r.onerror,i.captureUncaughtExceptions(r,t,!0),i.wrapGlobals(r,t,!0)),e.captureUnhandledRejections&&i.captureUnhandledRejections(r,t,!0);var n=e.autoInstrument;return e.enabled!==!1&&(void 0===n||n===!0||"object"==typeof n&&n.network)&&r.addEventListener&&(r.addEventListener("load",t.captureLoad.bind(t)),r.addEventListener("DOMContentLoaded",t.captureDomContentLoaded.bind(t))),r[o]=t,t})()}}function l(r){return n(function(){var e=this,o=Array.prototype.slice.call(arguments,0),n={shim:e,method:r,args:o,ts:new Date};window._rollbarShims[this.shimId()].messages.push(n)})}var i=o(2),s=0,d=o(3),c=function(r,e){return new t(r,e)},p=d.bind(null,c);t.prototype.loadFull=function(r,e,o,t,a){var l=function(){var e;if(void 0===r._rollbarDidLoad){e=new Error("rollbar.js did not load");for(var o,n,t,l,i=0;o=r._rollbarShims[i++];)for(o=o.messages||[];n=o.shift();)for(t=n.args||[],i=0;i<t.length;++i)if(l=t[i],"function"==typeof l){l(e);break}}"function"==typeof a&&a(e)},i=!1,s=e.createElement("script"),d=e.getElementsByTagName("script")[0],c=d.parentNode;s.crossOrigin="",s.src=t.rollbarJsUrl,o||(s.async=!0),s.onload=s.onreadystatechange=n(function(){if(!(i||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){s.onload=s.onreadystatechange=null;try{c.removeChild(s)}catch(r){}i=!0,l()}}),c.insertBefore(s,d)},t.prototype.wrap=function(r,e,o){try{var n;if(n="function"==typeof e?e:function(){return e||{}},"function"!=typeof r)return r;if(r._isWrap)return r;if(!r._rollbar_wrapped&&(r._rollbar_wrapped=function(){o&&"function"==typeof o&&o.apply(this,arguments);try{return r.apply(this,arguments)}catch(o){var e=o;throw e&&("string"==typeof e&&(e=new String(e)),e._rollbarContext=n()||{},e._rollbarContext._wrappedSource=r.toString(),window._rollbarWrappedError=e),e}},r._rollbar_wrapped._isWrap=!0,r.hasOwnProperty))for(var t in r)r.hasOwnProperty(t)&&(r._rollbar_wrapped[t]=r[t]);return r._rollbar_wrapped}catch(e){return r}};for(var u="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureEvent,captureDomContentLoaded,captureLoad".split(","),f=0;f<u.length;++f)t.prototype[u[f]]=l(u[f]);r.exports={setupShim:a,Rollbar:p}},function(r,e){"use strict";function o(r,e,o){if(r){var t;"function"==typeof e._rollbarOldOnError?t=e._rollbarOldOnError:r.onerror&&!r.onerror.belongsToShim&&(t=r.onerror,e._rollbarOldOnError=t);var a=function(){var o=Array.prototype.slice.call(arguments,0);n(r,e,t,o)};a.belongsToShim=o,r.onerror=a}}function n(r,e,o,n){r._rollbarWrappedError&&(n[4]||(n[4]=r._rollbarWrappedError),n[5]||(n[5]=r._rollbarWrappedError._rollbarContext),r._rollbarWrappedError=null),e.handleUncaughtException.apply(e,n),o&&o.apply(r,n)}function t(r,e,o){if(r){"function"==typeof r._rollbarURH&&r._rollbarURH.belongsToShim&&r.removeEventListener("unhandledrejection",r._rollbarURH);var n=function(r){var o,n,t;try{o=r.reason}catch(r){o=void 0}try{n=r.promise}catch(r){n="[unhandledrejection] error getting `promise` from event"}try{t=r.detail,!o&&t&&(o=t.reason,n=t.promise)}catch(r){t="[unhandledrejection] error getting `detail` from event"}o||(o="[unhandledrejection] error getting `reason` from event"),e&&e.handleUnhandledRejection&&e.handleUnhandledRejection(o,n)};n.belongsToShim=o,r._rollbarURH=n,r.addEventListener("unhandledrejection",n)}}function a(r,e,o){if(r){var n,t,a="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<a.length;++n)t=a[n],r[t]&&r[t].prototype&&l(e,r[t].prototype,o)}}function l(r,e,o){if(e.hasOwnProperty&&e.hasOwnProperty("addEventListener")){for(var n=e.addEventListener;n._rollbarOldAdd&&n.belongsToShim;)n=n._rollbarOldAdd;var t=function(e,o,t){n.call(this,e,r.wrap(o),t)};t._rollbarOldAdd=n,t.belongsToShim=o,e.addEventListener=t;for(var a=e.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var l=function(r,e,o){a.call(this,r,e&&e._rollbar_wrapped||e,o)};l._rollbarOldRemove=a,l.belongsToShim=o,e.removeEventListener=l}}r.exports={captureUncaughtExceptions:o,captureUnhandledRejections:t,wrapGlobals:a}},function(r,e){"use strict";function o(r,e){this.impl=r(e,this),this.options=e,n(o.prototype)}function n(r){for(var e=function(r){return function(){var e=Array.prototype.slice.call(arguments,0);if(this.impl[r])return this.impl[r].apply(this.impl,e)}},o="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureEvent,captureDomContentLoaded,captureLoad".split(","),n=0;n<o.length;n++)r[o[n]]=e(o[n])}o.prototype._swapAndProcessMessages=function(r,e){this.impl=r(this.options);for(var o,n,t;o=e.shift();)n=o.method,t=o.args,this[n]&&"function"==typeof this[n]&&("captureDomContentLoaded"===n||"captureLoad"===n?this[n].apply(this,[t[0],o.ts]):this[n].apply(this,t));return this},r.exports=o},function(r,e){"use strict";r.exports=function(r){return function(e){if(!e&&!window._rollbarInitialized){r=r||{};for(var o,n,t=r.globalAlias||"Rollbar",a=window.rollbar,l=function(r){return new a(r)},i=0;o=window._rollbarShims[i++];)n||(n=o.handler),o.handler._swapAndProcessMessages(l,o.messages);window[t]=n,window._rollbarInitialized=!0}}}}]);
    // End Rollbar Snippet
  </script>
  {{/isProduction}}
</head>
<body>
  <div id="round-countdown" style="display: none;">
    <div id="c3">3</div>
    <div id="c2">2</div>
    <div id="c1">1</div>
    <div id="cgo">Go!</div>
  </div>
  <div id="landing-buttons" class="page">
    <h2>Games</h2>
    <button id="hostBtn" class="landing-page-button full-width-button">Host a new game</button>
    <button id="joinBtn" class="landing-page-button full-width-button">Join an existing game</button>
  </div>

  <div id="game-chooser" class="page">
    <h2>Which game?</h2>
    <button data-game="hatgame" class="landing-page-button full-width-button game-chooser">Who's in the hat?</button>
    <button data-game="scattergories" class="landing-page-button full-width-button game-chooser">Scattergories</button>
    <button data-game="exlibris" class="landing-page-button full-width-button game-chooser">Ex libris (first line game)</button>
  </div>

  <div id="game-bar" class="page">
    <span id="room-link" class="hide"></span>
    <span id="people-counter">Participants: 1</span>
  </div>
 
  <div id="hatgame-setup" class="page page-narrow">
    <h1>Hat Game</h1>
    <p>Enter some names. Can be real or fictional, dead or alive, famous or family. Try and put names of people that everyone will have heard of.</p>
    <form class="input-with-button" onsubmit="return false">
      <input id="new-hat-name-input" type="text" placeholder="Enter a name" />
      <button id="new-hat-name-submit">+</button>
    </form>
    <div id="hat-game-name-count" style="font-weight: bold;">0 names so far</div>
    <p class="host-only">When you've got enough names you can...</p>
    <button id="start-hatgame" class="landing-page-button full-width-button host-only">Start the game</button>
    <p class="guest-only">The game will start when the host starts the game.</p>
  </div>

  <div id="hatgame-game" class="page" style="grid-template-columns: 1fr 1fr;padding-top:40px">
    <h1 id="hatgame-name" style="grid-column-start: 1;grid-column-end:3;">Name will appear here</h1>
    <button id="hatgame-skip-button" disabled class="landing-page-button" style="background: #a0b0cb">Oops - made a mistake</button>
    <button id="hatgame-done-button" disabled class="landing-page-button">They got it!</button>
  </div>

  <div id="hatgame-waiting" class="page">
    <h1>Guess the name!</h1>
  </div>

  <div id="hatgame-results" class="page">
    <h1>Results</h1>
    <ul>
    </ul>
    <div id="hatgame-start-over" style="margin: 20px 0;"></div>
    <button id="pull-next-name" class="landing-page-button full-width-button">Pull a name from the hat</button>
  </div>

  <div id="scattergories-setup" class="page">
    <h2>Categories</h2>
    <form class="input-with-button" onsubmit="return false">
      <input id="new-category-input" type="text" placeholder="Enter a category" />
      <button id="new-category-submit">+</button>
    </form>
    <ul id="existing-categories">
      <li>Currently no categories - add some in the box above...</li>
    </ul>
    <button id="start-game" class="landing-page-button full-width-button host-only">Start game</button>
  </div>
  
  <div id="scattergories-game" class="page">
    <h2>A round</h2>
    <form id="category-inputs" class="category-inputs" onsubmit="return false"></form>
    <button id="ready-button" class="landing-page-button full-width-button">I'm ready</button>
  </div>

  <div id="join-dialog" class="page">
    <form class="input-with-button" onsubmit="return false">
      <input id="join-room-input" type="text" placeholder="Enter the room name" />
      <button id="join-submit">🡆</button>
    </form>
  </div>

  <script src="/{{ scriptFile }}"></script>
</body>
</html>